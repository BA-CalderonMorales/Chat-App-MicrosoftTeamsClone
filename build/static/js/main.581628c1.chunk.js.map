{"version":3,"sources":["Components/MessageForm.jsx","Components/MyMessage.jsx","Components/TheirMessage.jsx","Components/ChatFeed.jsx","Components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","chatId","creds","useState","value","setValue","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","e","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.581628c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const { chatId, creds } = props;\r\n    \r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n        }\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n\r\n    return (  \r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default MessageForm;","import React from 'react';\r\n\r\nconst MyMessage = ({ message }) => {\r\n\r\n    if (message?.attachments?.length > 0) { // Greater than zero means there is an image.\r\n        return (\r\n            // Can add profile image capability by putting this in src=\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        );\r\n    }\r\n    return (  \r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MyMessage;","import React from 'react';\r\n\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (  \r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n            {message?.attachments?.length > 0 // Greater than zero means there is an image.\r\n                ?   (\r\n                        <img \r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                ) : (\r\n                    // MyMessage on right, TheirMessage on left.\r\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }} >\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TheirMessage;","import React from 'react';\r\nimport MessageForm from './MessageForm'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\n\r\n// console.log(chat);\r\n// console.log(userName);\r\n// console.log(messages);\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n    \r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`red_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        // console.log(keys);\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%'}} >\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}> \r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if(!chat) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (  \r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ChatFeed;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const authObject = { \r\n            'Project-ID': \"0081bc1c-e91e-4ffb-bdf6-65bac4c374b7\",\r\n            'User-Name': username,\r\n            'User-Secret': password\r\n        };\r\n\r\n        try {\r\n            // username | password => chatengine -> give me messages\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n            // if that works out -> login\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n            window.location.reload(); // Reloading since we have to render login or sign up form.\r\n        } catch (error) {\r\n            // else -> try with new username\r\n            setError('Oops! Incorrect username or password. Please try again.')\r\n        }\r\n\r\n    }\r\n\r\n    return (  \r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat With Mario</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input required type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" />\r\n                    <input required type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine';\r\nimport './App.css';\r\nimport ChatFeed from './Components/ChatFeed';\r\nimport LoginForm from './Components/LoginForm';\r\n\r\nconst App = () => {\r\n    const chatEngineProjectId = \"0081bc1c-e91e-4ffb-bdf6-65bac4c374b7\";\r\n    if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n    return (  \r\n        <>\r\n            <ChatEngine \r\n                height=\"100vh\"\r\n                projectID={chatEngineProjectId}\r\n                userName={localStorage.getItem('username')}\r\n                userSecret={localStorage.getItem('password')}\r\n                renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n            />\r\n        </>\r\n    );\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}